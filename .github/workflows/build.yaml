name: Build

on:
  workflow_dispatch

env:
  NODE_VERSION: '16.x'

jobs:  
  # app:
  #   name: App Build

  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [ubuntu-latest, windows-latest, macOS-latest]

  #   steps:
  #     - name: Context
  #       env:
  #         GITHUB_CONTEXT: ${{ toJson(github) }}
  #       run: echo "$GITHUB_CONTEXT"
      
  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: recursive

  #     - name: Use Node.js ${{ env.NODE_VERSION }}
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ env.NODE_VERSION }}

  #     - name: Install Dependencies
  #       run: |
  #         cd website/docusaurus-search-local
  #         yarn install --frozen-lockfile
  #         yarn build
  #         cd ../
  #         mkdir download
  #         yarn install --frozen-lockfile

  #     - name: Linux/Mac App Build & Copy to downloads
  #       if: matrix.os != 'windows-latest'
  #       run: |
  #         cd website
  #         GH_TOKEN=${{secrets.GITHUB_TOKEN}} npm run app-build
  #         mv dist/*.zip dist/*.dmg dist/*.deb dist/*.AppImage downloads || true

  #     - name: Windows App Build & Copy to downloads
  #       if: matrix.os == 'windows-latest'
  #       run: |
  #         cd website
  #         npm run app-build
  #         mv dist/*.exe download
  #         mv dist/*.zip download

  #       env:
  #         GH_TOKEN: ${{secrets.GITHUB_TOKEN}}

  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: ${{matrix.os}}
  #         path: website/download
          
  # pdf:
  #   name: PDF

  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: recursive

  #     - name: PDF Docker Build
  #       run: |
  #         docker-compose run pdf
  #         mkdir downloads
  #         mv parse/output/*.pdf downloads

  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: 'PDF'
  #         path: downloads
          
  prismpdf:
    name: Prism PDF

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Prism PDF Docker Build
        run: |
          docker-compose run prismpdf
          mkdir downloads
          mv parse/output/*-pdf.pdf downloads
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: 'Prism PDF'
          path: downloads