name: Release

on:
  release:
    types:
      - created

env:
  NODE_VERSION: '12.x'

jobs:
  app:
    name: App Build

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - name: Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Dependencies
        run: |
          cd website
          npm install
          mkdir download

      - name: Linux/Mac App Build & Copy to website/download
        if: matrix.os != 'windows-latest'
        run: |
          cd website
          GH_TOKEN=${{secrets.GITHUB_TOKEN}} npm run app-build
          mv dist/*.zip dist/*.dmg dist/*.deb dist/*.AppImage download || true

      - name: Windows App Build & Copy to website/download
        if: matrix.os == 'windows-latest'
        run: |
          cd website
          npm run app-build
          mv dist/*.exe download
          mv dist/*.zip download
        env:
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Create download JSON file
        run: |
          cd website
          npm run download

      - name: Transfer app to FarrserDeploy
        uses: Pendect/action-rsyncer@v1.1.0
        env:
          DEPLOY_KEY: ${{secrets.DEPLOY_KEY}}
        with:
          flags: '-avzr'
          options: ''
          ssh_options: ''
          src: 'website/download/'
          dest: 'root@176.58.122.97:/var/www/sites/avodocs/download/'

      - name: Transfer app to AvoDeploy
        uses: Pendect/action-rsyncer@v1.1.0
        env:
          DEPLOY_KEY: ${{secrets.AVO_DEPLOY_KEY}}
        with:
          flags: '-avzr'
          options: ''
          ssh_options: ''
          src: 'website/download/'
          dest: 'web@51.104.240.248:/var/www/html/manuals/titan/download/'

      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{matrix.os}}
          path: |
            website/download
            !website/download/*.json
          
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "website/download/**"
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  pdf:
    name: PDF

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: PDF Docker Build
        run: |
          docker-compose run pdf
          mkdir website/download
          mv parse/output/*.pdf website/download
          cd website
          npm install
          node ../parse/download.js --pdf

      - name: Transfer PDFs to FarrserDeploy
        uses: Pendect/action-rsyncer@v1.1.0
        env:
          DEPLOY_KEY: ${{secrets.DEPLOY_KEY}}
        with:
          flags: '-avzr'
          options: ''
          ssh_options: ''
          src: 'website/download/'
          dest: 'root@176.58.122.97:/var/www/sites/avodocs/download/'

      - name: Transfer PDFs to AvoDeploy
        uses: Pendect/action-rsyncer@v1.1.0
        env:
          DEPLOY_KEY: ${{secrets.AVO_DEPLOY_KEY}}
        with:
          flags: '-avzr'
          options: ''
          ssh_options: ''
          src: 'website/download/'
          dest: 'web@51.104.240.248:/var/www/html/manuals/titan/download/'

      - name: Upload artifacts to GitHub
        uses: actions/upload-artifact@v1
        with:
          name: 'PDF'
          path: |
            website/download
            !website/download/*.json
            
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "website/download/**"
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  web:
    name: Web Build and Deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: npm install, build, and test
      run: |
        cd website
        npm install
        npm run build --if-present
        npm run test --if-present
    - name: Deploy
      uses: Pendect/action-rsyncer@v1.1.0
      env:
        DEPLOY_KEY: ${{secrets.DEPLOY_KEY}}
      with:
        flags: '-avzr --delete --exclude "website/build/AvoDocs/download/*"'
        options: ''
        ssh_options: ''
        src: 'website/build/AvoDocs/'
        dest: 'root@176.58.122.97:/var/www/sites/avodocs/'
    - name: AvoDeploy
      uses: Pendect/action-rsyncer@v1.1.0
      env:
        DEPLOY_KEY: ${{secrets.AVO_DEPLOY_KEY}}
      with:
        flags: '-avzr --delete --exclude "website/build/AvoDocs/download/*"'
        options: ''
        ssh_options: ''
        src: 'website/build/AvoDocs/'
        dest: 'web@51.104.240.248:/var/www/html/manuals/titan/'

  download:
    name: Download page
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Wait for build to finish
        uses: fountainhead/action-wait-for-check@v1.0.0
        id: pdf
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: build
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          timeoutSeconds: 1800

      - name: Copy JSON download files from build
          uses: Pendect/action-rsyncer@v1.1.0
          env:
            DEPLOY_KEY: ${{secrets.AVO_DEPLOY_KEY}}
          with:
            flags: '-avzr --include="*/" --exclude="*" --include="*.json"'
            options: ''
            ssh_options: ''
            src: 'web@51.104.240.248:/var/www/html/manuals/titan/download/'
            dest: 'website/static/download/'

      - name: npm install & build
        run: |
          cd website
          npm install
          npm run build

      - name: Deploy
        uses: Pendect/action-rsyncer@v1.1.0
        env:
          DEPLOY_KEY: ${{secrets.DEPLOY_KEY}}
        with:
          flags: '-avzr --delete --include="versions.html" --include="versions/index.html" --exclude="*"'
          options: ''
          ssh_options: ''
          src: 'website/build/AvoDocs/'
          dest: 'root@176.58.122.97:/var/www/sites/avodocs/'

      - name: AvoDeploy
        uses: Pendect/action-rsyncer@v1.1.0
        env:
          DEPLOY_KEY: ${{secrets.AVO_DEPLOY_KEY}}
        with:
          flags: '-avzr --delete --include="versions.html" --include="versions/index.html" --exclude="*"'
          options: ''
          ssh_options: ''
          src: 'website/build/AvoDocs/'
          dest: 'web@51.104.240.248:/var/www/html/manuals/titan/'